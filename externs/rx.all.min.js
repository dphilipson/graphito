var Rx = {
    "Rx": {
        "Observer": {
            "prototype": {
                "onNext": function () {},
                "onCompleted": function () {},
                "onDone": function () {}
            }
        },
        "Observable": {
            "fromEvent": function () {},
            "empty": function () {},
            "create": function () {},
            "generateWithRelativeTime": function () {},
            "prototype": {
                "isObservable": function () {},
                "forEach": function () {},
                "subscribe": function () {},
                "subscribeOnNext": function () {},
                "subscribeOnError": function () {},
                "subscribeOnCompleted": function () {},
                "observeOn": function () {},
                "subscribeOn": function () {},
                "toPromise": function () {},
                "toArray": function () {},
                "amb": function () {},
                "catchError": function () {},
                "catch": function () {},
                "combineLatest": function () {},
                "concat": function () {},
                "concatObservable": function () {},
                "concatAll": function () {},
                "merge": function () {},
                "mergeObservable": function () {},
                "mergeAll": function () {},
                "onErrorResumeNext": function () {},
                "skipUntil": function () {},
                "switchLatest": function () {},
                "switch": function () {},
                "takeUntil": function () {},
                "withLatestFrom": function () {},
                "zip": function () {},
                "asObservable": function () {},
                "bufferWithCount": function () {},
                "dematerialize": function () {},
                "distinctUntilChanged": function () {},
                "doAction": function () {},
                "tap": function () {},
                "do": function () {},
                "tapOnNext": function () {},
                "doOnNext": function () {},
                "tapOnError": function () {},
                "doOnError": function () {},
                "tapOnCompleted": function () {},
                "doOnCompleted": function () {},
                "ensure": function () {},
                "finally": function () {},
                "ignoreElements": function () {},
                "materialize": function () {},
                "repeat": function () {},
                "retry": function () {},
                "retryWhen": function () {},
                "scan": function () {},
                "skipLast": function () {},
                "startWith": function () {},
                "takeLast": function () {},
                "takeLastBuffer": function () {},
                "windowWithCount": function () {},
                "concatMap": function () {},
                "selectConcat": function () {},
                "selectConcatObserver": function () {},
                "concatMapObserver": function () {},
                "defaultIfEmpty": function () {},
                "distinct": function () {},
                "groupBy": function () {},
                "groupByUntil": function () {},
                "select": function () {},
                "map": function () {},
                "pluck": function () {},
                "flatMap": function () {},
                "selectMany": function () {},
                "selectManyObserver": function () {},
                "flatMapObserver": function () {},
                "switchMap": function () {},
                "flatMapLatest": function () {},
                "selectSwitch": function () {},
                "skip": function () {},
                "skipWhile": function () {},
                "take": function () {},
                "takeWhile": function () {},
                "where": function () {},
                "filter": function () {},
                "reduce": function () {},
                "some": function () {},
                "any": function () {},
                "isEmpty": function () {},
                "every": function () {},
                "all": function () {},
                "includes": function () {},
                "contains": function () {},
                "count": function () {},
                "indexOf": function () {},
                "sum": function () {},
                "minBy": function () {},
                "min": function () {},
                "maxBy": function () {},
                "max": function () {},
                "average": function () {},
                "sequenceEqual": function () {},
                "elementAt": function () {},
                "single": function () {},
                "first": function () {},
                "last": function () {},
                "find": function () {},
                "findIndex": function () {},
                "toSet": function () {},
                "toMap": function () {},
                "pausable": function () {},
                "pausableBuffered": function () {},
                "controlled": function () {},
                "pipe": function () {},
                "multicast": function () {},
                "publish": function () {},
                "share": function () {},
                "publishLast": function () {},
                "publishValue": function () {},
                "shareValue": function () {},
                "replay": function () {},
                "shareReplay": function () {},
                "singleInstance": function () {},
                "join": function () {},
                "groupJoin": function () {},
                "buffer": function () {},
                "window": function () {},
                "pairwise": function () {},
                "partition": function () {},
                "let": function () {},
                "letBind": function () {},
                "doWhile": function () {},
                "expand": function () {},
                "forkJoin": function () {},
                "extend": function () {},
                "manySelect": function () {},
                "and": function () {},
                "thenDo": function () {},
                "delay": function () {},
                "throttleWithTimeout": function () {},
                "debounce": function () {},
                "throttle": function () {},
                "windowWithTime": function () {},
                "windowWithTimeOrCount": function () {},
                "bufferWithTime": function () {},
                "bufferWithTimeOrCount": function () {},
                "timeInterval": function () {},
                "timestamp": function () {},
                "throttleLatest": function () {},
                "sample": function () {},
                "timeout": function () {},
                "delaySubscription": function () {},
                "delayWithSelector": function () {},
                "timeoutWithSelector": function () {},
                "debounceWithSelector": function () {},
                "throttleWithSelector": function () {},
                "skipLastWithTime": function () {},
                "takeLastWithTime": function () {},
                "takeLastBufferWithTime": function () {},
                "takeWithTime": function () {},
                "skipWithTime": function () {},
                "skipUntilWithTime": function () {},
                "takeUntilWithTime": function () {},
                "throttleFirst": function () {},
                "transduce": function () {},
                "switchFirst": function () {},
                "flatMapFirst": function () {},
                "selectSwitchFirst": function () {},
                "flatMapWithMaxConcurrent": function () {},
                "selectManyWithMaxConcurrent": function () {}
            }
        }
    }
}
